{"version":3,"sources":["Pages/Landing/background.png","Pages/Landing/headshot.jpg","Components/Rule.js","Pages/Landing/Skills.js","Components/Links.js","Pages/Landing/Projects/Projects.js","Pages/Landing/Landing.js","Pages/Landing/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","styled","hr","props","width","Skills","div","bestAt","goodAt","interestedIn","SkillList","list","map","item","index","lineEnding","length","keyframes","LinkDropdown","LinkGroup","button","span","Link","a","links","link","href","url","target","icon","IconRow","h3","Project","ProjectHeader","projects","name","tech","description","title","actions","onClick","redshift","Fragment","Rule","project","Splash","background","AboutMe","Landing","src","headshot","Projects","style","margin","footer","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac578ed1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.16e96984.png\";","module.exports = __webpack_public_path__ + \"static/media/headshot.7ffb16dc.jpg\";","import styled from 'styled-components';\n\nexport default styled.hr`\n    border: none;\n    border-top: 2px double #333;\n    height: 5px;\n    overflow: visible;\n    width: ${props => props.width || \"75vw\"};\n`","import React from \"react\";\nimport styled from 'styled-components';\n\nconst Skills = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 6fr;\n  grid-row-gap: 2em;\n  grid-column-gap: 5%;\n  margin: 2vh 5%;\n\n  @media(max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  };\n\n  & h3 {\n    margin-right: 5%;\n    margin-left: 5%;\n    text-align: left;\n    display: block;\n    white-space: nowrap;\n    height: 100%;\n    font-weight: bold;\n  }\n\n  & span {\n    text-align: left;\n  }\n`\n\nconst bestAt = [\n  <span>Web development using <b>React</b></span>,\n  'Spring',\n  'Express',\n  'MongoDB', \n  'Python',\n  <span>organizing <b>Agile</b> scrum teams</span>\n]\n\nconst goodAt = [\n  'Keras',\n  'Tensorflow',\n  'Sci-Kit learn',\n  'Webpack',\n  'git'\n]\n\nconst interestedIn = [\n  'Web design',\n  'big data'\n]\n\nconst SkillList = ({ list }) => list.map((item, index) => {\n  let lineEnding = \", \"\n  if (list.length === index+2) lineEnding = \", and \";\n  else if (list.length === index+1) lineEnding = \".\"\n  if (typeof item === \"string\") {\n    return <span><b>{item}</b>{lineEnding}</span>\n  } else {\n    return <span>{item}{lineEnding}</span>;\n  }\n});\n\nexport default () => (\n  <Skills>\n    <h3>I'm best at</h3><div><SkillList list={bestAt}/></div>\n    <h3>I'm good at</h3><div><SkillList list={goodAt}/></div>\n    <h3>I'm interested in </h3><div><SkillList list={interestedIn}/></div>\n  </Skills>\n);\n","import React from 'react';\nimport { FaCaretDown } from 'react-icons/fa';\nimport styled, { keyframes } from 'styled-components';\n\nconst slideDown = keyframes`\n    0% {\n        height: 0%;\n    }\n    100% {\n        height: fit-content;\n    }\n`\n\nconst LinkDropdown = styled.div`\n    border-radius: 0px 0px 10px 10px;\n    border: 1px solid #333;\n    border-top: 0;\n    background: inherit;\n    color: #333;\n    overflow: hidden;\n    position: absolute;\n    top: 100%;\n    right: 0px;\n    visibility: hidden;\n    width: 100%;\n    max-height: 0%;\n\n    a {\n        height: 40px;\n    }\n    transition: max-height .5s linear;\n`\n\nconst LinkButton = styled.button`\n    border-radius: 5px;\n    color: #333;\n    background: transparent;\n    border: 1px solid #333;\n    position: relative;\n    padding: 5px 20px;\n\n    &:hover {\n        border-radius: 5px 5px 0px 0px;\n        ${LinkDropdown} {\n            max-height: 500px;\n            visibility: visible;\n        }\n        border-bottom: 0;\n    }\n\n    &:active, &:focus {\n        outline: none;\n        border-radius: 5px 5px 0px 0px;\n    }\n`\n\nconst LinkButtonText = styled.span`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\n// export default ({ links }) => {\n//     return (\n//         <LinkButton>\n//             <LinkButtonText>Links <FaCaretDown/></LinkButtonText>\n//             <LinkDropdown>\n//                 {links.map(link => (\n//                     <p><a target=\"_blank\" href={link.url}>{link.icon} {link.title}</a></p>\n//                 ))}\n//             </LinkDropdown>\n//         </LinkButton>\n//     )\n// }\n\nconst LinkGroup = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-left: 5%;\n`\n\nconst Link = styled.a`\n    width: 30px;\n    font-size: 1.5em;\n    color: #333;\n    &:link {\n        color: white;\n    }\n`\n\nexport default ({ links }) => (\n    <LinkGroup>\n        {links.map(link => \n            <Link href={link.url} target=\"_blank\">{link.icon}</Link>\n        )}\n    </LinkGroup>\n)","import React from 'react';\nimport redshift from 'pointless-redshift';\nimport styled from 'styled-components'\nimport { FaGithub, FaReact, FaNodeJs, FaNpm, FaVuejs, FaJs, FaHtml5, FaCss3, FaPython } from 'react-icons/fa';\nimport { DiMongodb } from 'react-icons/di';\nimport { SiKeras, SiTensorflow } from 'react-icons/si'\nimport { IoLogoJavascript } from 'react-icons/io'\nimport Rule from '../../../Components/Rule'\nimport ProjectLinks from '../../../Components/Links';\n\n\nconst enableRedshift = () => redshift(.8);\n\nconst IconRow = styled.h3`\n  white-space: nowrap;\n  * {\n    margin: 0px 3%;\n  }\n`\n\nconst Project = styled.div`\n  width: 90%;\n  margin-top: 25px;\n\n  &::not(:last-child) {\n    margin-bottom: 25px;\n  }\n\n  h2 {\n    margin: 0px;\n  }\n  p {\n    margin: 1% 5%;\n  }\n` \n\nconst ProjectHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`\n\nconst projects = [{\n        name: \"BallotDropMA\",\n        tech: [<FaReact/>, <FaNodeJs/>, <DiMongodb/>],\n        description: \"A website built to help MA residents find their closest ballot drop box. I scraped the Secretary of State's website to get the data, then hosted it in a MongoDB Atlas instance. The backend is something I'm particularly proud of, generic controllers and services work by dependency injection of the Mongoose Model. The API and Webapp were hosted on Azure from September to December 2020.\",\n        links: [{\n            icon: <FaGithub/>,\n            title: \"Frontend\",\n            url: \"https://github.com/ryanmahan/ballotdropma\",\n        }, {\n            icon: <FaGithub/>,\n            title: \"API\",\n            url: \"https://github.com/ryanmahan/ballotdropma-api\",\n        }]\n    }, {\n      name: \"WTFUMass\",\n      tech: [<FaVuejs/>, <FaNodeJs/>, <DiMongodb/>],\n      description: \"A 311-like site that students at UMass Amherst could suggest and vote on priorities for the student goverment to work on.\",\n      links: [{\n          icon: <FaGithub/>,\n          title: \"Source\",\n          url: \"https://github.com/ryanmahan/wtfumass\",\n      }],\n    }, {\n      name: \"ARG!\",\n      tech: [<FaJs/>, <FaHtml5/>, <FaCss3/>],\n      description: \"A game created for researchers to measure impulsive aggression. Researchers can program the games computer to play in certain ways, and force the user to lose or win.\",\n      links: [{\n          icon: <FaGithub/>,\n          title: \"Source\",\n          url: \"https://github.com/ryanmahan/arg-psych\",\n      }],\n    }, {\n      name: \"Kaggle\",\n      tech: [<FaPython/>, <SiKeras/>, <SiTensorflow/>],\n      description: \"A repository containing my attempts on Kaggle.com. I use these as a way to build and practice machine learning skills.\",\n      links: [{\n          icon: <FaGithub/>,\n          title: \"Source\",\n          url: \"https://github.com/ryanmahan/wtfumass\",\n      }],\n    }, {\n        name: \"Pointless Redshift\",\n        tech: [<IoLogoJavascript/>],\n        description: \"A pointless NPM package that redshifts/blueshifts a webpage based on the user's scroll speed. I built this in an afternoon because I was curious about the NPM package publishing process.\",\n        links: [{\n            icon: <FaGithub/>,\n            title: \"Source\",\n            url: \"https://github.com/ryanmahan/pointless-redshift\",\n        }, {\n            icon: <FaNpm/>,\n            title: \"NPM Page\",\n            url: \"https://www.npmjs.com/package/pointless-redshift\"\n        }],\n        actions: [<button onClick={enableRedshift}>Enable Redshift</button>]\n    }\n]\n\nexport default () => (\n  <React.Fragment>\n    <h1>My Projects</h1>\n    <Rule/>\n    <div>\n      { projects.map((project, index) => (\n        <Project>\n          <ProjectHeader>\n            <h2>{project.name}</h2>\n            <IconRow>{project.tech}</IconRow>\n          </ProjectHeader>\n          <Rule width=\"100%\"/>\n          <p>{project.description}</p>\n          <p>{project.actions}</p>\n          <ProjectLinks links={project.links}/>\n        </Project>\n        \n\n      ))}\n    </div>\n  </React.Fragment>\n    \n);","import React from 'react';\nimport styled from 'styled-components';\nimport Rule from \"../../Components/Rule\";\nimport background from \"./background.png\";\nimport headshot from \"./headshot.jpg\";\nimport Skills from './Skills';\nimport Projects from './Projects/Projects';\nimport Links from '../../Components/Links';\nimport { FaEnvelope, FaGithub, FaLinkedin } from 'react-icons/fa';\n\nconst Splash = styled.div`\n  background-image: url(${background});\n  background-repeat: no-repeat;\n  background-size: cover;\n  min-height: 100vh;\n  margin: 0px;\n\n  & h1 {\n    margin: 0;\n    margin-left: 5%;\n    padding-top: 10%;\n    text-align: left;\n    font-size: 2em;\n  }\n\n  & h3 {\n    margin: 0%;\n    margin-left: 5%;\n  }\n\n  > * {\n    margin-left: 5%;\n  }\n`\n\nconst AboutMe = styled.div`\n  display: flex;\n  margin-top: 5%;\n  margin-left: 2%;\n  margin-right: 2%;\n\n  img {\n    width: 45vw;\n    height: auto;\n  }\n\n  @media(max-width: 767px) {\n    img {\n      width: 20%;\n      height: 20%;\n      clip-path: circle(38%);\n    }\n  }\n`\n\nconst LinkGroup = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-left: 10%;\n`\n\nconst Link = styled.a`\n    width: 30px;\n    font-size: 1.5em;\n    color: #333;\n    &:link {\n        color: white;\n    }\n\n`\n\nconst Landing = (props) => {\n  return (\n    <Splash>\n      <br></br> {/* to avoid margin collapse */}\n      <AboutMe>\n        <img src={headshot}/>\n        <div>\n          <h1>Hey, I'm Ryan. <br/> I write code.</h1>\n          <Rule width=\"100%\"/>\n          <h3>\n            I work as a Software Engineer and Scrum Master at Optum. In my free time I'm learning data science by competing in kaggle competitions, use my 3D printer, and build PCs. I like to listen to NPR podcasts like Planet Money, Throughline, and How I Built This. I have two adorable dogs who are the stars of all my video calls. I strive for constant growth and adaptation.\n          </h3>\n        </div>\n      </AboutMe>\n      <h1>My Skills</h1>\n      <Rule/>\n      <Skills/>\n      <Projects/>\n      <h1>Contact Me</h1>\n      <Rule/>\n      <p style={{margin: \"0px 10%\"}}>Thanks for scrolling so far! Use the links below to send me an email, view my linkedin, or my github page.</p>\n      <LinkGroup>\n        <Link href=\"mailto:ryanmahan97@gmail.com\"><FaEnvelope/></Link>\n        <Link href=\"https://linkedin.com/in/ryan-mahan\"><FaLinkedin/></Link>\n        <Link href=\"https://github.com/ryanmahan\"><FaGithub/></Link>\n      </LinkGroup>\n    </Splash>\n  )\n}\n\nexport default Landing;","import Landing from './Landing';\n\nexport default Landing;","import React from 'react';\nimport styled from 'styled-components';\nimport Landing from \"./Pages/Landing\"\n\nconst Footer = styled.footer`\n  background: #f0f2f5;\n  color: #333;\n`\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Landing/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}